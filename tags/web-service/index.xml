<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>web service on Not About Code - Technical Leadership</title><link>https://ijemmy.github.io/notaboutcode/tags/web-service/</link><description>Recent content in web service on Not About Code - Technical Leadership</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 26 Dec 2017 12:04:02 +0700</lastBuildDate><atom:link href="https://ijemmy.github.io/notaboutcode/tags/web-service/index.xml" rel="self" type="application/rss+xml"/><item><title>การออกแบบ Service API ให้เป็น Idempotent</title><link>https://ijemmy.github.io/notaboutcode/post/16-idempotent/</link><pubDate>Tue, 26 Dec 2017 12:04:02 +0700</pubDate><guid>https://ijemmy.github.io/notaboutcode/post/16-idempotent/</guid><description>&lt;p>&lt;img src="img/covers/pay-01.jpg" alt="Photo by William Iven on Unsplash">&lt;/p>
&lt;p>ใครเคยเรียกใช้งานเซอร์วิซครั้งเดียว (เช่น การโอนเงิน สั่งซื้อของ ฯลฯ) แล้วเจอ Transaction ตัดซ้ำสองครั้งไหมครับ?&lt;/p>
&lt;p>ถ้าใช่ คุณเจอปัญหาเรื่อง Idempotent เข้าให้แล้วล่ะ&lt;/p>
&lt;p>เราเคยคุยกันในเรื่องของ&lt;a href="https://ijemmy.github.io/notaboutcode/notaboutcode/post/05-retry/">Retry&lt;/a>ไปแล้ว ว่าอาจจะถล่มเซอร์วิซตัวเองได้ หากไม่จัดการให้ดี&lt;/p>
&lt;p>มานั่งตรึกตรองดูอีกที จริงๆแล้วผมลืมอีกคอนเซ็บหนึ่งที่สำคัญมากเวลาเราใช้ Retry นั่นก็คือเรื่อง Idempotent ซึ่งเป็นที่มาของ เคส Transaction เกิดขึ้นสองที&lt;/p>
&lt;p>บทความนี้จะเริ่มต้นจากต้นตอของปัญหานี้ก่อน เพื่ออธิบายให้เห็นภาพว่าเกิดอะไรขึ้น และเสนอวิธีการแก้ปัญหาในตอนท้ายครับ&lt;/p></description></item><item><title>การออกแบบ Service API ให้ Backward-Compatible</title><link>https://ijemmy.github.io/notaboutcode/post/15-service-api-versioning/</link><pubDate>Fri, 15 Dec 2017 12:04:02 +0700</pubDate><guid>https://ijemmy.github.io/notaboutcode/post/15-service-api-versioning/</guid><description>&lt;p>&lt;img src="img/covers/lego-01.jpg" alt="Photo by Iker Urteaga on Unsplash">&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;APIs, like diamonds, are forever&amp;rdquo; &amp;ndash; Xebia Essentials&lt;/p>
&lt;/blockquote>
&lt;p>เรานิยมเลือกใช้เพชรในแหวนแต่งงาน เพื่อแสดงความเป็นนิรันดร์&lt;/p>
&lt;p>เวลาออกแบบ Service API ผมแนะนำให้ใส่ความโรแมนติกนี้ลงไปหน่อย ลองคิดว่านี่แหละคือแหวนแต่งงาน ระหว่างคุณและผู้ใช้เซอร์วิซของคุณ ที่จะอยู่ต่อไปตลอดจนชั่วเซอร์วิซสลาย&lt;/p></description></item></channel></rss>