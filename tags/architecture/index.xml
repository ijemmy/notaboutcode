<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>architecture on Not About Code - Technical Leadership</title><link>https://www.notaboutcode.com/tags/architecture/</link><description>Recent content in architecture on Not About Code - Technical Leadership</description><generator>Hugo -- gohugo.io</generator><language>th</language><lastBuildDate>Sat, 01 Sep 2018 12:04:02 +0700</lastBuildDate><atom:link href="https://www.notaboutcode.com/tags/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>มาทำความรู้จักกับ Serverless กัน</title><link>https://www.notaboutcode.com/post/26-serverless-architecture/</link><pubDate>Sat, 01 Sep 2018 12:04:02 +0700</pubDate><guid>https://www.notaboutcode.com/post/26-serverless-architecture/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/aurora-01.jpg" alt="Photo by Nicolas J Leclercq on Unsplash">&lt;/p>
&lt;p>ช่วงสองปีที่ผ่านมา แนวคิดหนึ่งที่ผมจับตาดูอยู่คือเรื่องของ Serverless&lt;/p>
&lt;p>ตามชื่อเลย Serverless คือไม่มีเซอร์เวอร์ ซึ่งจริงๆแล้วเซอร์เวอร์ก็ไม่ได้หายไปไหน เพียงแต่ทีมพัฒนาไม่ต้องสนใจมันเหมือนแต่ก่อนแล้ว&lt;/p>
&lt;p>แนวคิดเรื่องนี้ยังถือว่าค่อนข้างใหม่ เมื่อสองปีที่แล้วผมทดลองใช้ครั้งแรกเพื่อดูว่าเอาไปใช้ทำโปรเจ็คจริงได้รึเปล่า ก็ค้นพบว่าพวก Tool และ Practices ต่างๆยังไม่พร้อมเท่าไร&lt;/p>
&lt;p>ผ่านมาสองปี รู้สึกว่าเริ่มเข้าที่เข้าทางมากขึ้น จึงพึ่งได้เอามาใช้ทำโปรเจ็คจริง เลยเอามาเล่าสู่กันฟังครับ เผื่อใครอยากจะลองเอาไปใช้กัน&lt;/p></description></item><item><title>การออกแบบระบบให้รับ Request เยอะๆ</title><link>https://www.notaboutcode.com/post/22-design-to-scale/</link><pubDate>Sun, 29 Apr 2018 12:04:02 +0700</pubDate><guid>https://www.notaboutcode.com/post/22-design-to-scale/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/scale-01.jpg" alt="Photo by Immo Wegmann on Unsplash">&lt;/p>
&lt;p>เมื่อเดือนที่แล้ว มีโอกาสกลับไปเป็น Guest Speaker ที่ภาค ในวิชา System Analysis and Design&lt;/p>
&lt;p>อาจารย์ให้อิสระในเรื่องของหัวข้อ เลยตัดสินใจว่าอยากเล่าเรื่องที่มันสนุกๆ เผื่อน้องๆจะสนใจสาย Technical กันมากขึ้น หลังจากคิดอยู่หลายวัน ก็มาจบลงที่เรื่องนี้&lt;/p>
&lt;p>ด้วยเวลาที่จำกัด รู้สึกว่าถ่ายทอดเนื้อหาได้ไม่ครบเท่าที่ควร เลยเอาเนื้อหามาเขียนเป็นบทความซะเลย จะได้ไม่ค้างคาใจ&lt;/p>
&lt;p>เราจะเริ่มตั้งแต่การรับ Requirement การกะปริมาณ Load ของระบบ ไล่ไปจนถึงเทคนิคเบื้องที่ใช้ในการออกแบบให้รับ Request ได้เยอะขึ้น และสามารถโตตามปริมาณคนใช้ในอนาคตได้&lt;/p></description></item></channel></rss>