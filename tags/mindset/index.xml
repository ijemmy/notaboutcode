<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mindset on Not About Code - Technical Leadership</title><link>https://www.notaboutcode.com/tags/mindset/</link><description>Recent content in mindset on Not About Code - Technical Leadership</description><generator>Hugo -- gohugo.io</generator><language>th</language><lastBuildDate>Thu, 30 Jun 2022 15:05:28 +0100</lastBuildDate><atom:link href="https://www.notaboutcode.com/tags/mindset/index.xml" rel="self" type="application/rss+xml"/><item><title>ทำงานให้เร็วขึ้น ในเวลาที่น้อยลง (ในบริบทของโปรแกรมเมอร์)</title><link>https://www.notaboutcode.com/post/40-more-work-with-less-time/</link><pubDate>Thu, 30 Jun 2022 15:05:28 +0100</pubDate><guid>https://www.notaboutcode.com/post/40-more-work-with-less-time/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/tangled-01.png" alt="Photo by Sebastian Herrmann on Unsplash">&lt;/p>
&lt;p>ผมเป็นคนบ้างานในระดับนึงเลย&lt;/p>
&lt;p>จะเรียกว่าบ้างานก็ไม่ถูกซะทีเดียว เพราะผมค่อนข้างจะสนุกกับงานเขียนโปรแกรม บางทีก็ไม่ได้รู้สึกว่าตัวเองทำงานอยู่&lt;/p>
&lt;p>พอถึงหกโมงเย็น ถ้ายังแก้บั้คไม่เสร็จ ก็ยังจะอยากดีบั๊กต่อ ถ้าทำฟีเจอร์เสร็จ ก็อยากจะทำฟีเจอร์ถัดไป ไม่ก็นั่งรีแฟคเตอร์ต่อ&lt;/p>
&lt;p>สมัยมีชีวิตโสด ออกจากงานประมาณ 2-3 ทุ่ม เป็นอย่างเร็ว&lt;/p>
&lt;p>สองปีก่อนแต่งงาน ชีวิตเปลี่ยนครับ&lt;/p>
&lt;p>แฟนยื่นข้อเสนอที่ปฏิเสธไม่ได้ก่อนแต่งงาน คือเราสองคนต้องกลับมากินข้าวเย็นด้วยกันที่บ้านก่อนทุ่มนึง&lt;/p>
&lt;p>ดังนั้น ประมาณ 5.30 ของทุกวัน ผมก็จะเตรียมแพ็คของกลับบ้าน&lt;/p>
&lt;p>หลังจากทำได้สักสองสัปดาห์ ยามในออฟฟิซก็เริ่มทัก ว่ายูหายไปไหนตอนกลางคืน (ยามกะดึกจะเจอผมทุกวัน)&lt;/p></description></item><item><title>จากหลักล้านสู่หลักหน่วย ด้วยความรู้ด้าน Data structure (ตอน 1)</title><link>https://www.notaboutcode.com/post/39-bloem-filter-01/</link><pubDate>Wed, 29 Jun 2022 15:05:28 +0100</pubDate><guid>https://www.notaboutcode.com/post/39-bloem-filter-01/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/surprised-kid-01.png" alt="Photo by Xavi Cabrera on Unsplash">&lt;/p>
&lt;p>ถ้าใครเคยสัมภาษณ์งานตำแหน่ง Software Engineer ในองค์กรเทคระดับโลก (เช่น Google, Amazon, Facebook, Apple, Netflix) จะรู้ว่าทุกบริษัทจะเช็คความรู้ด้าน Data structure หมด&lt;/p>
&lt;p>สาเหตุเพราะนี่ความรู้ที่สำคัญมากในการทำงานเสกลใหญ่ๆ ที่มีจำนวนข้อมูล หรือผุ้ใช้หลักล้านขึ้นไป&lt;/p>
&lt;p>สำคัญมากนี่คือแค่ไหน?&lt;/p>
&lt;p>ในบทความนี้ ผมจะยกตัวอย่างโจทย์ง่ายๆ ที่เกิดขึ้นในเว็บบราวเซอร์ที่เราใช้ทุกวัน และแสดงให้เห็นว่า โปรแกรมสามารถทำงานเร็วต่างกัน ชนิดราวฟ้ากับเหว (จากคำนวนล้านครั้งเหลือแค่ไม่ถึงสิบครั้ง) ถ้าคนเขียนรู้จักใช้ Data structure ที่เหมาะสม&lt;/p></description></item><item><title>เมื่อต้องขยับไปเป็นเทคลีด (From an engineer to a technical lead)</title><link>https://www.notaboutcode.com/post/38-promote-to-tech-lead/</link><pubDate>Fri, 27 May 2022 15:05:28 +0100</pubDate><guid>https://www.notaboutcode.com/post/38-promote-to-tech-lead/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/meeting-01.png" alt="Photo by Sebastian Herrmann on Unsplash">&lt;/p>
&lt;p>พอถึงจุดนึงในชีวิต หัวหน้าจะเลื่อนขั้นคุณ แต่อย่าด่วนดีใจไป เพราะการเลื่อนขั้นมักจะมาพร้อมกับภาระหน้าที่ที่เพิ่มขึ้น (ส่วนจะขึ้นเงินเดือนให้รึเปล่านี่อีกเรื่องนึง)&lt;/p>
&lt;p>สำหรับคนที่ไม่ได้อยากทำสาย People Management (เช่น ไปเป็น Engineering manager) ส่วนใหญ่ก็มักจะได้รับการเลื่อนตำแหน่งให้เป็น Technical lead (หรือบางที่ก็เรียกว่า Project lead) ที่คอยดูแลภาพรวมของโปรเจ็คหรือโปรดักต์ และคอยกระจายงานให้กับคนในทีม&lt;/p>
&lt;p>จากประสบการณ์ส่วนตัว การขยับไปเทคลีดมักจะไม่ได้มีการเตรียมพร้อมกันให้ดี ส่วนใหญ่มักจะเกิดขึ้นเพราะมีเทคลีดคนเก่าออก หรือไม่ก็ค้นพบว่าทิศทางมันมั่วมาก ควรจะมีใครสักคนคอยดูแลเรื่องนี้&lt;/p>
&lt;p>ถ้าเทียบกับตอนเริ่มทำงานใหม่ๆ อย่างน้อยคุณก็จะมีเมนเตอร์หรือพี่เลี้ยงในทีมคอยช่วย แต่พอเลื่อนทำแหน่งเป็นเทคลีด หัวหน้ามักจะคิดว่าคุณทำได้ทันทีโดยไม่ต้องมีพี่เลี้ยงหรือชั่วโมงทดลองบิน ซึ่งก็มักจะนำมาซึ่งความฉิบหายในโปรเจ็คแรกๆ ก่อนที่จะเข้าที่เข้าทาง (อันนี้ผมเองเลย)&lt;/p>
&lt;p>บทความนี้เสนอข้อแนะนำ 3 ข้อ สำหรับเทคลีดมือใหม่ครับ&lt;/p></description></item><item><title>Terminal job level ใน FAANG (Facebook, Amazon, Apple, Netflix, และ Google)</title><link>https://www.notaboutcode.com/post/37-terminal-job-level/</link><pubDate>Sun, 20 Mar 2022 15:05:28 +0100</pubDate><guid>https://www.notaboutcode.com/post/37-terminal-job-level/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/level-fyi-01.png" alt="Screenshot from level.fyi">&lt;/p>
&lt;p>เมื่อวานก่อนคุยกับเพื่อนเรื่อง Terminal job level ใน FAANG กับเรื่อง Staff Engineer ไม่ค่อยได้เขียนโค้ด เลยเอามาแชร์กันครับ&lt;/p>
&lt;p>FAANG เป็นชื่อย่อของบริษัทไอทีในอเมริกา ได้แก่ Facebook, Amazon, Apple, Netflix, และ Google เป็นบริษัทที่ทุกคนรู้จัก และเหล่าคนที่ทำงานด้านเทคก็(มักจะ)อยากมีชื่อบริษัทเหล่านี้ติดใน Resume กัน&lt;/p>
&lt;p>โดยแต่ละบริษัทก็จะมี Job level ในองค์กรที่ต่างกัน ถ้าเราเอามาเทียบกับความเข้าใจทั่วไป ก็จะแบ่งเป็นระดับ Junior, Mid-level, Senior, Staff, Principal, Distinguished, Fellow&lt;/p>
&lt;p>ระดับที่เรารู้จักกันส่วนใหญ่คือสามระดับแรก หลังจากนั้นก็จะเป็นระดับ Staff ซึ่งจะเป็นระดับที่เนื้องานต่างจากสามระดับแรกมาก&lt;/p></description></item><item><title>Technical decision on ambiguity/ ตัดสินใจบนความกำกวม</title><link>https://www.notaboutcode.com/post/36-tech-decision-on-ambiguity/</link><pubDate>Fri, 11 Mar 2022 15:05:28 +0100</pubDate><guid>https://www.notaboutcode.com/post/36-tech-decision-on-ambiguity/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/question-mark-01.png" alt="Photo by Towfiqu barbhuiya on Unsplash">&lt;/p>
&lt;p>เมื่อวานก่อนบังเอิญเจอเพื่อนร่วมงานเก่าที่ไม่ได้เจอกันสองปีกว่า เค้าบอกว่าพรุ่งนี้จะบินไปทำงานที่ ​US แล้ว&lt;/p>
&lt;p>ผมก็ถามต่อว่างานมีรายละเอียดยังไง ต้องทำอะไรต่างจากเดิมไหม เค้าก็บอกว่าไม่เลย ทำระบบเดิม ขอบเขตงานเหมือนเดิม เพียงแต่ที่ฝั่ง US มีจ้างโปรแกรมเมอร์เพิ่ม แต่เป็นเด็กใหม่หมด พึ่งจบจากมหาวิทยาลัย ทีมเลยอยากให้มีโปรแกรมเมอร์ที่อาวุโสหน่อยไปช่วยสอน ซึ่งเค้าก็ชอบสอนคนอื่นอยู่แล้ว (และสอนได้ดีด้วย คนนี้ใจเย็น อารมณ์ดี)&lt;/p>
&lt;p>แสดงความยินดี คุยกันจบ ทำให้ผมกลับมาคิด&lt;/p>
&lt;p>อย่างแรกเลยคือปริมาณโปรแกรมเมอร์จบใหม่ทั่วโลก และที่เปลี่ยนสายมากำลังเพิ่มขึ้นมาก เพราะเงินเดือนที่ดีขึ้น คุณภาพงานที่ดีกว่า (ทำ remote หรือ Work From Home ได้)&lt;/p>
&lt;p>แต่ปริมาณความต้องการก็เพิ่มขึ้นไม่แพ้กัน&lt;/p></description></item><item><title>What Got You Here Won't Get You There / อย่าคิดว่าทำแบบเดิมแล้วจะสำเร็จไปตลอด</title><link>https://www.notaboutcode.com/post/35-what-got-you-here/</link><pubDate>Sun, 06 Mar 2022 15:05:28 +0100</pubDate><guid>https://www.notaboutcode.com/post/35-what-got-you-here/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/pool-stair-01.png" alt="Photo by Szabo Viktor on Unsplash">&lt;/p>
&lt;p>เมื่อวานก่อนบังเอิญเจอเพื่อนร่วมงานเก่าที่ไม่ได้เจอกันสองปีกว่า เค้าบอกว่าพรุ่งนี้จะบินไปทำงานที่ ​US แล้ว&lt;/p>
&lt;p>ผมก็ถามต่อว่างานมีรายละเอียดยังไง ต้องทำอะไรต่างจากเดิมไหม เค้าก็บอกว่าไม่เลย ทำระบบเดิม ขอบเขตงานเหมือนเดิม เพียงแต่ที่ฝั่ง US มีจ้างโปรแกรมเมอร์เพิ่ม แต่เป็นเด็กใหม่หมด พึ่งจบจากมหาวิทยาลัย ทีมเลยอยากให้มีโปรแกรมเมอร์ที่อาวุโสหน่อยไปช่วยสอน ซึ่งเค้าก็ชอบสอนคนอื่นอยู่แล้ว (และสอนได้ดีด้วย คนนี้ใจเย็น อารมณ์ดี)&lt;/p>
&lt;p>แสดงความยินดี คุยกันจบ ทำให้ผมกลับมาคิด&lt;/p></description></item><item><title>จาก Definition of Done สู่ Definition of Success</title><link>https://www.notaboutcode.com/post/34-definition-of-success/</link><pubDate>Thu, 03 Mar 2022 15:05:28 +0100</pubDate><guid>https://www.notaboutcode.com/post/34-definition-of-success/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/get-shit-done-01.png" alt="Photo by Minh Pham on Unsplash">&lt;/p>
&lt;p>วันนี้คุยกับเมนเตอร์เรื่องทำอย่างไรเราถึงจะสร้าง Impact จากงานที่เราทำได้ ทำยังไงให้เราก้าวจาก Senior เป็นระดับ Staff หรือ Principal&lt;/p>
&lt;p>คุยไปคุยมาได้ไอเดียที่จริงๆแล้วใกล้ตัวมาก แต่ไม่เคยคิดให้ลึกซึ้งมาก่อน เลยมาเล่าให้ฟังครับ&lt;/p>
&lt;p>เรามักจะได้ยินคำว่า Definition of Done (DoD) กันบ่อยในโลกของอไจล์ หลักๆเลยก็มักจะระบุว่างานจะเสร็จต้องมีเทสต์ครบ ต้องพร้อมขึ้นโปรดักชั่น (Releasable) ฯลฯ&lt;/p></description></item></channel></rss>