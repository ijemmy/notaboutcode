<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>good-practice on Not About Code - Technical Leadership</title><link>https://www.notaboutcode.com/tags/good-practice/</link><description>Recent content in good-practice on Not About Code - Technical Leadership</description><generator>Hugo -- gohugo.io</generator><language>th</language><lastBuildDate>Sat, 26 Feb 2022 15:05:28 +0100</lastBuildDate><atom:link href="https://www.notaboutcode.com/tags/good-practice/index.xml" rel="self" type="application/rss+xml"/><item><title>คิดและวางแผนก่อน(แก้)โค้ด</title><link>https://www.notaboutcode.com/post/33-think-before-code/</link><pubDate>Sat, 26 Feb 2022 15:05:28 +0100</pubDate><guid>https://www.notaboutcode.com/post/33-think-before-code/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/notebook-01.png" alt="Photo by KOBU Agency on Unsplash">&lt;/p>
&lt;p>อีกหนึ่งในนิสัยที่ผมเห็นโปรแกรมเมอร์เก่งๆมีกัน คือเค้าจะคิดค่อนข้างถี่ถ้วนลงมือเขียน(หรือแก้)โค้ด พอคุยกันเสร็จ เค้าจะหยิบสมุดหรือกระดาษขึ้นมาขีดๆเขียนๆไดอะแกรม เพื่อเช็คความเข้าใจก่อนก่อน เพื่อให้มีแผนคร่าวๆในหัวก่อนจะเริ่มเขียน&lt;/p>
&lt;p>ในทางตรงกันข้าม จูเนียร์โปรแกรมเมอร์หลายคน พอคุยกันยังไม่ทันเสร็จดี จะเปิดไฟล์ขึ้นมา คิดอะไรไม่ออกใส่ For loop ทันทีเลย ไม่ได้เช็คดูด้วยซ้ำว่าไอ้โค้ดที่จะแก้นี่มันรันผ่านอยู่รึเปล่า&lt;/p>
&lt;p>อันนี้ผมเจอบ่อยมาก พอผ่านไปสองช.ม. ก็จะเห็นว่านั่งงมบั๊ก ไม่แน่ใจว่าพังตรงไหน&lt;/p>
&lt;p>คำถามคือ ควรจะคิดอะไร วางแผนอะไรบ้าง?​ ผมเสนอดังนี้ครับ&lt;/p></description></item><item><title>เขียนโค้ดให้เหมือนเต่า จะไปได้เร็วกว่ากระต่าย</title><link>https://www.notaboutcode.com/post/32-code-slowly-to-be-fast/</link><pubDate>Sat, 26 Feb 2022 15:05:28 +0100</pubDate><guid>https://www.notaboutcode.com/post/32-code-slowly-to-be-fast/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/turtle-01.png" alt="Photo by Tanguy Sauvin on Unsplash">&lt;/p>
&lt;p>สำหรับคนที่พึ่งเขียนโค้ดใหม่ๆ ผมแนะนำว่าให้พยายามเขียนโค้ดทีละนิด อย่าเขียนรวดเดียวครับ&lt;/p>
&lt;p>ผมสังเกตว่าคนที่เขียนโค้ดได้ดี จะมีพฤติกรรมหลายอย่างคล้ายๆกัน หนึ่งในพฤติกรรมที่ผมเห็นบ่อย คือเค้าจะแก้โค้ดทีละนิด แล้วค่อยๆรันดูว่าทำงานถูกต้องตามที่คิดไว้ไหม พอทำถูกแล้ว ก็จะค่อยเติมโค้ดเข้าไปต่อ&lt;/p>
&lt;p>แต่ละรอบ เค้าจะแก้โค้ดแค่ไม่เกินห้าบรรทัด&lt;/p>
&lt;p>ตัวอย่างเช่น ผมอยากจะเขียน API เพื่อรับค่าจาก Array มาคำนวนแล้วส่งค่า Sum กลับไป ผมจะเขียนแต่ละรอบดังนี้&lt;/p></description></item></channel></rss>