<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevOps on Not About Code - Technical Leadership</title><link>https://www.notaboutcode.com/categories/devops/</link><description>Recent content in DevOps on Not About Code - Technical Leadership</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 12 Feb 2022 12:04:02 +0700</lastBuildDate><atom:link href="https://www.notaboutcode.com/categories/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Structured Logging คืออะไร ทำไมถึงเป็นที่นิยม</title><link>https://www.notaboutcode.com/post/30-structured-logging/</link><pubDate>Sat, 12 Feb 2022 12:04:02 +0700</pubDate><guid>https://www.notaboutcode.com/post/30-structured-logging/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/log-01.png" alt="Photo by Atlas Kadrów(@atlaskadrow) on Unsplash">&lt;/p>
&lt;p>เมื่อ 6 ปีที่แล้ว สมัยผมยังทำงาน Operation คู่กับงาน Dev อยู่ หนึ่งในสิ่งที่ผมไม่ชอบมากๆคือการนั่งไล่ Log เพื่อหาว่าบั้คมันมาจากไหน&lt;/p>
&lt;p>สมัยก่อนก็ไม่เคยคิดครับว่าทำไมการไล่ Log มันถึงทรมานมาก พอเวลาผ่านไป เห็น Practice ใหม่ๆมากขึ้นถึงเข้าใจ ว่าปัญหามันมาตั้งแต่การออกแบบ Log Format และวิธีการเก็บ&lt;/p>
&lt;p>ปัจจุบันนี้ เวลาผมให้คำปรึกษาลูกค้า ผมจะบอกให้ทำ สิ่งที่เรียกว่า Structured Logging ซึ่งทำให้ชีวิตของการไล่ Log มันดีขึ้นมาก เวลามีบั้คก็หาต้นตอกันเร็วขึ้น&lt;/p>
&lt;p>วันนี้เราจะมาคุยเรื่องนี้กัน ผมจะเริ่มเล่าให้ฟังถึงวิธีการเก็บ Log ในสมัยก่อน ชี้ให้เห็นถึงปัญหาว่าทำไมมันทำให้ไล่ยาก และจบด้วยตัวอย่างการใช้ Structured Logging ที่มาช่วยแก้ปัญหานี้ครับ&lt;/p></description></item><item><title>Deploy ระบบอย่างไรไม่ให้ล่ม</title><link>https://www.notaboutcode.com/post/28-deployment-methods/</link><pubDate>Sun, 10 Mar 2019 12:04:02 +0700</pubDate><guid>https://www.notaboutcode.com/post/28-deployment-methods/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/cars-01.jpg" alt="Photo by rawpixel on Unsplash">&lt;/p>
&lt;p>สำหรับวีดีโอนี้ เราจะมาคุยกันเรื่องการ Deploy ระบบแบบให้มี High Availability คือผู้ใช้จะต้องสามารถใช้งานระบบของเราได้ตลอด และไม่ได้รับผลกระทบใดๆ เช่น ระบบช้าผิดปกติ หรือบาง Request ผิดพลาด&lt;/p>
&lt;p>ส่วนแรกของวีดีโอจะคุยกันว่าระบบล่มเวลา Deploy ได้อย่างไร และส่วนที่สองจะอธิบายเรื่องการ Deploy แบบต่างๆและข้อดีข้อเสียของแต่ละแบบ&lt;/p></description></item></channel></rss>