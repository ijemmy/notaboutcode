<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Engineering on Not About Code - Technical Leadership</title>
    <link>https://www.notaboutcode.com/categories/software-engineering/</link>
    <description>Recent content in Software Engineering on Not About Code - Technical Leadership</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>th</language>
    <lastBuildDate>Sat, 01 Sep 2018 12:04:02 +0700</lastBuildDate><atom:link href="https://www.notaboutcode.com/categories/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>มาทำความรู้จักกับ Serverless กัน</title>
      <link>https://www.notaboutcode.com/post/26-serverless-architecture/</link>
      <pubDate>Sat, 01 Sep 2018 12:04:02 +0700</pubDate>
      
      <guid>https://www.notaboutcode.com/post/26-serverless-architecture/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://www.notaboutcode.com/img/covers/aurora-01.jpg&#34; alt=&#34;Photo by Nicolas J Leclercq on Unsplash&#34;&gt;&lt;/p&gt;
&lt;p&gt;ช่วงสองปีที่ผ่านมา แนวคิดหนึ่งที่ผมจับตาดูอยู่คือเรื่องของ Serverless&lt;/p&gt;
&lt;p&gt;ตามชื่อเลย Serverless คือไม่มีเซอร์เวอร์ ซึ่งจริงๆแล้วเซอร์เวอร์ก็ไม่ได้หายไปไหน เพียงแต่ทีมพัฒนาไม่ต้องสนใจมันเหมือนแต่ก่อนแล้ว&lt;/p&gt;
&lt;p&gt;แนวคิดเรื่องนี้ยังถือว่าค่อนข้างใหม่ เมื่อสองปีที่แล้วผมทดลองใช้ครั้งแรกเพื่อดูว่าเอาไปใช้ทำโปรเจ็คจริงได้รึเปล่า ก็ค้นพบว่าพวก Tool และ Practices ต่างๆยังไม่พร้อมเท่าไร&lt;/p&gt;
&lt;p&gt;ผ่านมาสองปี รู้สึกว่าเริ่มเข้าที่เข้าทางมากขึ้น จึงพึ่งได้เอามาใช้ทำโปรเจ็คจริง เลยเอามาเล่าสู่กันฟังครับ เผื่อใครอยากจะลองเอาไปใช้กัน&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>การนำ Agile มาใช้ในองค์กร</title>
      <link>https://www.notaboutcode.com/post/25-advices-for-adopting-agile/</link>
      <pubDate>Sat, 23 Jun 2018 12:04:02 +0700</pubDate>
      
      <guid>https://www.notaboutcode.com/post/25-advices-for-adopting-agile/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://www.notaboutcode.com/img/covers/collaboration-01.jpg&#34; alt=&#34;Photo by rawpixel on Unsplash&#34;&gt;&lt;/p&gt;
&lt;p&gt;ผมรู้จักกับ Agile (อไจล์) เมื่อสิบกว่าปีที่แล้ว ตอนนั้นก็ไม่รู้หรอกว่ามันจะป๊อบขนาดนี้ สมัยนั้นอย่าพูดถึงอไจล์เลย ทีมไหนทำ Unit Testing ก็ถือว่าหรูแล้ว&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ฝั่ง UK จะออกเสียงว่า อา-ไจล์, ฝั่ง US จะอ่านออกเสียว่า แอ-ไจล์ ในบทความนี้จะขอใช้ทับศัพท์ว่าอไจล์ซึ่งเป็นที่นิยมใช้กันนะครับ  &amp;ndash; &lt;a href=&#34;https://dictionary.cambridge.org/pronunciation/english/agile&#34;&gt;https://dictionary.cambridge.org/pronunciation/english/agile&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ด้วยความที่คลุกคลีอยู่กับเรื่องนี้ตั้งแต่ยุคที่อไจล์เข้ามาแรกๆ เลยได้เห็นการเปลี่ยนแปลงตั้งแต่สมัยที่ผู้บริหารรู้สึกว่าทีมที่ทำอไจล์คือการก่อกบฏ จนถึงปัจจุบันนี้ ถ้าทีมไหนไม่ทำอไจล์แล้วจะกลายเป็นกบฏแทน&lt;/p&gt;
&lt;p&gt;ผมเชื่อว่าผู้บริหารระดับสูงที่กล้าจะเลือกใช้อไจล์นั้นมีวิสัยทัศน์ที่ดี แต่เวลาปฏิบัติจริง ผมกลับเห็นว่าหลายที่ได้ผลลัพธ์เละเทะมาก สุดท้ายก็มาจบลงที่ว่าอไจล์ไม่ดี หรือไม่เหมาะกับองค์กร (ซึ่งก็อาจจะเป็นไปได้)  หรือบางที่ก็เลือกที่จะซุกปัญหาไว้ใต้พรม แล้วทำ KPI ให้ดูสวยๆว่าผลลัพธ์ออกมาดี&lt;/p&gt;
&lt;p&gt;สุดท้ายกลายเป็นตราบาปให้กับอไจล์ เป็นแผลเป็นให้กับพนักงานในบริษัท ที่ขยาดทุกครั้งที่ได้ยินคำนี้&lt;/p&gt;
&lt;p&gt;ผมเลยอยากเขียนบทความนี้ไว้ให้ผู้บริหาร และหัวหน้าทีมพัฒนา (Technical Lead/ Team Lead) เพราะทัศนคติที่ถูกต้องต่ออไจล์จะส่งผลกระทบต่อการรับอไจล์เข้ามาในองค์กรมาก&lt;/p&gt;
&lt;p&gt;บทความนี้จะพูดถึงข้อแนะนำ และตัวอย่างกรณีที่ดี/ไม่ดีแบบต่างๆ ในการนำอไจล์เข้ามาในองค์กร โดยผู้เขียนอนุมานว่าผู้อ่านรู้จักอไจล์และ Scrum แล้ว หากใครที่ยังไม่เข้าใจคำพวกนี้ แนะนำให้อ่านบทความอื่นก่อนครับ&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
