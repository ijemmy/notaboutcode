<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>thoughts on Not About Code - Technical Leadership</title><link>https://www.notaboutcode.com/categories/thoughts/</link><description>Recent content in thoughts on Not About Code - Technical Leadership</description><generator>Hugo -- gohugo.io</generator><language>th</language><lastBuildDate>Sun, 20 Mar 2022 15:05:28 +0100</lastBuildDate><atom:link href="https://www.notaboutcode.com/categories/thoughts/index.xml" rel="self" type="application/rss+xml"/><item><title>Terminal job level ใน FAANG (Facebook, Amazon, Apple, Netflix, และ Google)</title><link>https://www.notaboutcode.com/post/37-terminal-job-level/</link><pubDate>Sun, 20 Mar 2022 15:05:28 +0100</pubDate><guid>https://www.notaboutcode.com/post/37-terminal-job-level/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/level-fyi-01.png" alt="Screenshot from level.fyi">&lt;/p>
&lt;p>เมื่อวานก่อนคุยกับเพื่อนเรื่อง Terminal job level ใน FAANG กับเรื่อง Staff Engineer ไม่ค่อยได้เขียนโค้ด เลยเอามาแชร์กันครับ&lt;/p>
&lt;p>FAANG เป็นชื่อย่อของบริษัทไอทีในอเมริกา ได้แก่ Facebook, Amazon, Apple, Netflix, และ Google เป็นบริษัทที่ทุกคนรู้จัก และเหล่าคนที่ทำงานด้านเทคก็(มักจะ)อยากมีชื่อบริษัทเหล่านี้ติดใน Resume กัน&lt;/p>
&lt;p>โดยแต่ละบริษัทก็จะมี Job level ในองค์กรที่ต่างกัน ถ้าเราเอามาเทียบกับความเข้าใจทั่วไป ก็จะแบ่งเป็นระดับ Junior, Mid-level, Senior, Staff, Principal, Distinguished, Fellow&lt;/p>
&lt;p>ระดับที่เรารู้จักกันส่วนใหญ่คือสามระดับแรก หลังจากนั้นก็จะเป็นระดับ Staff ซึ่งจะเป็นระดับที่เนื้องานต่างจากสามระดับแรกมาก&lt;/p></description></item><item><title>What Got You Here Won't Get You There / อย่าคิดว่าทำแบบเดิมแล้วจะสำเร็จไปตลอด</title><link>https://www.notaboutcode.com/post/35-what-got-you-here/</link><pubDate>Sun, 06 Mar 2022 15:05:28 +0100</pubDate><guid>https://www.notaboutcode.com/post/35-what-got-you-here/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/pool-stair-01.png" alt="Photo by Szabo Viktor on Unsplash">&lt;/p>
&lt;p>เมื่อวานก่อนบังเอิญเจอเพื่อนร่วมงานเก่าที่ไม่ได้เจอกันสองปีกว่า เค้าบอกว่าพรุ่งนี้จะบินไปทำงานที่ ​US แล้ว&lt;/p>
&lt;p>ผมก็ถามต่อว่างานมีรายละเอียดยังไง ต้องทำอะไรต่างจากเดิมไหม เค้าก็บอกว่าไม่เลย ทำระบบเดิม ขอบเขตงานเหมือนเดิม เพียงแต่ที่ฝั่ง US มีจ้างโปรแกรมเมอร์เพิ่ม แต่เป็นเด็กใหม่หมด พึ่งจบจากมหาวิทยาลัย ทีมเลยอยากให้มีโปรแกรมเมอร์ที่อาวุโสหน่อยไปช่วยสอน ซึ่งเค้าก็ชอบสอนคนอื่นอยู่แล้ว (และสอนได้ดีด้วย คนนี้ใจเย็น อารมณ์ดี)&lt;/p>
&lt;p>แสดงความยินดี คุยกันจบ ทำให้ผมกลับมาคิด&lt;/p></description></item><item><title>จาก Definition of Done สู่ Definition of Success</title><link>https://www.notaboutcode.com/post/34-definition-of-success/</link><pubDate>Thu, 03 Mar 2022 15:05:28 +0100</pubDate><guid>https://www.notaboutcode.com/post/34-definition-of-success/</guid><description>&lt;p>&lt;img src="https://www.notaboutcode.com/img/covers/get-shit-done-01.png" alt="Photo by Minh Pham on Unsplash">&lt;/p>
&lt;p>วันนี้คุยกับเมนเตอร์เรื่องทำอย่างไรเราถึงจะสร้าง Impact จากงานที่เราทำได้ ทำยังไงให้เราก้าวจาก Senior เป็นระดับ Staff หรือ Principal&lt;/p>
&lt;p>คุยไปคุยมาได้ไอเดียที่จริงๆแล้วใกล้ตัวมาก แต่ไม่เคยคิดให้ลึกซึ้งมาก่อน เลยมาเล่าให้ฟังครับ&lt;/p>
&lt;p>เรามักจะได้ยินคำว่า Definition of Done (DoD) กันบ่อยในโลกของอไจล์ หลักๆเลยก็มักจะระบุว่างานจะเสร็จต้องมีเทสต์ครบ ต้องพร้อมขึ้นโปรดักชั่น (Releasable) ฯลฯ&lt;/p></description></item></channel></rss>